# Firstly Install the Following Libraries
pip install numpy pandas scikit-learn matplotlib seaborn

# Import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the California Housing dataset
california = fetch_california_housing()

# Convert to DataFrame for easier manipulation
df = pd.DataFrame(california.data, columns=california.feature_names)
df['PRICE'] = california.target

# Display the first few rows of the dataframe
print(df.head())

# Display basic statistics
print(df.describe())

# Visualize the relationships
sns.pairplot(df[['PRICE', 'MedInc', 'HouseAge', 'AveRooms', 'AveOccup']])
plt.show()

# Split data into features and target variable
X = df.drop('PRICE', axis=1)
y = df['PRICE']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")

# Plotting predicted vs actual values
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual Prices vs Predicted Prices')
plt.show()
